/// Mixin to prefix a property
/// @param {String} $property - Property name
/// @param {*} $value - Property value
/// @param {List} $prefixes (()) - List of prefixes to print
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
  // Output standard non-prefixed declaration
  #{$property}: $value;
}

%square-shared {
    box-sizing: content-box;
    width: 30px;
    height: 30px;
}

%thick-bottom-border {
    border-bottom-width: 3px;
}

%thick-right-border {
    border-right-width: 3px;
}

%outisde-top-border {
    border-top: 1px solid black;
}

%outside-left-border {
    border-left: 1px solid black;
}

%outisde-bottom-border {
    border-bottom: 1px solid black;
}

%outside-right-border {
    border-right: 1px solid black;
}

body {
    background-color: #bae1f0;
}

.game-square {
    @extend %square-shared;
    display: inline-block;
    border: 1px solid lightgrey;
    border: {
        top: 1px transparent;
        left: 1px transparent;
    };
    touch-action: none;
    -webkit-user-drag: none;
    -moz-user-drag: none;
    user-drag: none;

    &.filled {
        background-color: black;
    }

    &.blocked {
        &:before {
            content: "";
            position: absolute;
            border-top: 1px solid grey;
            width: 42px;
            transform: rotate(45deg);
            transform-origin: 0 0;
        }
        &:after {
            content: "";
            position: absolute;
            border-top: 1px solid grey;
            width: 43px;
            transform: rotate(-45deg);
            transform-origin: 0 0;
            margin-top: 30px;
        }
    }
    &:nth-child(5n) {
        @extend %thick-right-border;
    }
    &:nth-last-child(1) {
        @extend %outside-right-border;
    }
}

.game-row {
    display: flex;
    line-height: 0;
    flex-wrap: nowrap;
    
    &:nth-child(5n) {
        .game-square {
            @extend %thick-bottom-border;
        }
    }

    &:nth-last-child(1) {
        .game-square {
            @extend %outisde-bottom-border;
        }   
    }
}

.game-rows {
    background-color: white;
    border-top: 1px solid black;
    border-left: 1px solid black;
    display: inline-block;
}

.game-board {
    display: inline-block;
}

.hint-rows {
    display: inline-block;
}

.hint-square {
    @extend %square-shared;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.2em;
    border: 1px solid black;
    border-top: 1px transparent;
    background-color: lightgrey;
    border-left: 1px transparent;
    -webkit-user-select: none;      
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;

    &.solved {
        background-color: #848484;
        color: #fff;
    }
}



.hint-row {
    display: flex;
    justify-content: flex-end;

    &:nth-child(1) {
        .hint-square {
            @extend %outisde-top-border;
        }
    }
    &:nth-child(5n) {
        .hint-square {
            @extend %thick-bottom-border;
        }
    }
    &:nth-last-child(1) {
        .hint-square {
            @extend %outisde-bottom-border;
        }
    }
    .hint-square {
        &:nth-child(1) {
            @extend %outside-left-border;
        }
    }
}

.hint-column {
    display: flex;
    flex-direction: column;
    justify-content: flex-end;

    .hint-square {
        &:nth-child(1) {
            @extend %outisde-top-border;
        }
    }
    &:nth-child(1) {
        .hint-square {
            @extend %outside-left-border;
        }
    }
    &:nth-child(5n) {
        .hint-square {
            @extend %thick-right-border;
        }
    }
    &:nth-last-child(1) {
        .hint-square {
            @extend %outside-right-border
        }
    }
}

.puzzle-board {
    padding: 10px;
}

.hint-columns {
    display: flex;
    grid-column-start: 2;
}

.hint-area {
    display: grid;
}

#index {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    p {
        text-align: center;
        width: 80%;
    }

    #game-key-nav {
        display: flex;
        flex-flow: row wrap;
        justify-content: center;

        label {
            break-after: always;
            input {
                margin-left: 5px;
            }
        }
    }
}

@keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
}

/* Firefox < 16 */
@-moz-keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
}

/* Safari, Chrome and Opera > 12.1 */
@-webkit-keyframes fadein {
    from { opacity: 0; }
    to   { opacity: 1; }
}

@-ms-keyframes fadeout {
    from { opacity: 1; }
    to   { opacity: 0; }
}
@keyframes fadeout {
    from { opacity: 1; }
    to   { opacity: 0; }
}
@-moz-keyframes fadeout {
    from { opacity: 1; }
    to   { opacity: 0; }
}
@-webkit-keyframes fadeout {
    from { opacity: 1; }
    to   { opacity: 0; }
}
@-ms-keyframes fadeout {
    from { opacity: 1; }
    to   { opacity: 0; }
}

.create-puzzle {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    .controls {
        label {
            margin-right: 10px;
        }
        input {
            width: 100px;
            margin-left: 10px;
        }
    }
    p {
        margin-top: 5px;
    }
    .button-holder {
        display: flex;
        justify-content: center;
        button {
            margin: {
                left: 5px;
                right: 5px;
            }
        }
        margin-bottom: 5px;
        
    }
}

#game-key-generated {
    padding: 3px;
    border: 1px dashed black;
    cursor: pointer;
    background-color: #fde896;
    position: relative;
    display: inline-block;
    input {
        cursor: pointer;
        background-color: #fde896;
        border: none;
    }
    .copy-tooltip {
        visibility: hidden;
        width: 120px;
        background-color: black;
        color: #fff;
        text-align: center;
        padding: 5px 0;
        border-radius: 6px;
        
        position: absolute;
        z-index: 1;
        top: -2px;
        left: 102%;
    }
    &:hover {
        .copy-tooltip {
            visibility: visible;
            @include prefix(animation, fadein 1s, webkit moz ms o);
            &.copied {
                visibility: hidden;
                opacity: 0;
                transition: visibility 0s 2s, opacity 2s linear;
            }
        }
    }
}

.invalid-key {
    display: flex;
    flex-direction: column;
    align-items: center;
}


nav {
    display: flex;
    justify-content: center;
    border-bottom: 1px solid black;
    background-color: #f0f0f0;
    padding-bottom: 5px;
    padding-top: 3px;
    ul {
        margin-bottom: 0;
        li {
            display: inline-block;
            margin-right: 10px;
            color: black;
        }
    }

    form#game-key-nav {
        display: flex;
        align-items: center;
        label {
            margin-bottom: 0;
            margin-right: .3rem;
            input {
                margin-left: .5rem;
            }
        }
        .game-key-go {
            padding: {
                top: .15rem;
                right: .75rem;
                bottom: .15rem;
                left: .75rem;
            }
        }
    }
    
}